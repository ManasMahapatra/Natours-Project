.card {
  //The perspective value is set depending upon the distance of user from the effect.
  //very less can result to dramatic effects while very high can lead to same as none.
  perspective: 150rem;
  position: relative;
  height: 50rem;
  &__side {
    //Every time you take an element out of the flow, either by float or by position, the
    //element looses it's height.
    transition: all .8s;
    position: absolute;
    top: 0;
    left:0;
    width: 100%;
    //This property hides the behind of the card.
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    height: 50rem;
    border-radius: 3px;
    overflow: hidden;
    box-shadow: $heavy-box-shadow;
    //there are two sides to the card
    &--front {
      background-color: $color-white;
    }
    //the back part must be kept rotated 180deg by default, so that when hovered
    //it should be rotated back to 0deg
    &--back {
      transform: rotateY(180deg);
      &-1 {
        background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark)
      }
      &-2 {
        background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark)
      }
      &-3 {
        background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark)
      }
    }
  }

  &:hover &__side--front{
    //Keep it negative so as to keep it rotating at the right direction.
    transform: rotateY(-180deg);
  }
  &:hover &__side--back{
    transform: rotateY(0);
  }
  //Frontside styling
  &__picture {
    background-size: cover;
    height: 23rem;
    //This allows blending the background with a certain linear graient.
    background-blend-mode: screen;
    clip-path: polygon(0 0, 100% 0, 100% 88%, 0 100%);
    &--1 {
      background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),url(../img/nat-5.jpg)
    }
    &--2 {
      background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),url(../img/nat-6.jpg)
    }
    &--3 {
      background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),url(../img/nat-7.jpg)
    }
  }
  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
  }
  &__heading-span {
    padding: 1rem 1.5rem;
    box-decoration-break: clone;
    &--1 {
      background-image: linear-gradient(to right bottom, rgba($color-secondary-light,.85), rgba($color-secondary-dark, .85));
    }
    &--2 {
      background-image: linear-gradient(to right bottom, rgba($color-primary-light,.85), rgba($color-primary-dark, .85));
    }
    &--3 {
      background-image: linear-gradient(to right bottom, rgba($color-tertiary-light,.85), rgba($color-tertiary-dark, .85));
    }
  }
  &__details {
    padding: 3rem;

    ul {
      list-style: none;
      width: 100%;

      li {
        text-transform: uppercase;
        text-align: center;
        font-size: 1.3rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1px solid $color-grey-light-1;
        }
    }
    }
  }
  &__cta {
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translate(-50%,-50%);
    width: 52%;
    text-align: center;
  }
  &__price-box {
    text-align: center;
    margin-bottom: 8rem;
    color: $color-white;
  }
  &__price-only {
    font-size: 1.4rem;
    text-transform: uppercase;
  }
  &__price-value {
    font-size: 6rem;
    font-weight: 100;
    margin-bottom: 8rem;
  }

  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    //The perspective value is set depending upon the distance of user from the effect.
    //very less can result to dramatic effects while very high can lead to same as none.
    height: auto;
    border-radius: 3px;
    background-color: $color-white;
    box-shadow: $heavy-box-shadow;
    &__side {
      //Every time you take an element out of the flow, either by float or by position, the
      //element looses it's height.
      position: relative;
      height: auto;
      overflow: hidden;
      box-shadow: none;
      //there are two sides to the card
      //the back part must be kept rotated 180deg by default, so that when hovered
      //it should be rotated back to 0deg
      &--back {
        transform: rotateY(0);
        clip-path: polygon(0 15%, 100% 0,100% 100%,0 100%);
      }
    }
    &__details {
      padding: 1rem 3rem;
    }
    &:hover &__side--front{
      //Keep it negative so as to keep it rotating at the right direction.
      transform: rotateY(0);
    }
    //Frontside styling
    &__cta {
      position: relative;
      top: 0;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem;
    }
    &__price-box {
      margin-bottom: 3rem;
    }
    &__price-value {
      font-size: 5rem;
    }
  }
}
