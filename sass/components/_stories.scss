.story {
  width: 75%;
  background-color: rgba($color-white,.6);
  box-shadow: 0 3rem 6rem rgba(0,0,0,.1);
  margin:0 auto;
  border-radius: 3px;
  padding: 6rem;
  //after transforming the shape we loose the padding to the lft, so add it
  padding-left: 9rem;
  font-size: $default-font-size;
  transform: skewX(-12deg);
  position:relative;
  @include respond(tab-port) {
    width: 100%;
    padding: 4rem;
    //after transforming the shape we loose the padding to the lft, so add it
    padding-left: 7rem;
  }
  @include respond(phone) {
    transform: skewX(0);
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    //Shape outside defines a shape which encomapasses the element;
    //For this to work, element should be floated. The params: radius at centre-cordinates
    //This just defines the outside shape of the elements that are floating nearby. It doesnt effect the shape of the current element
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: skewX(12deg) translateX(-3rem);
    @include respond(phone) {
      transform: translateX(-3rem) skewX(0);
    }
  }
  &__img {
    //Flexible image always needs to be explicitely provided a height/width.
    height:100%;
    transform: translateX(-4rem) scale(1.4);
    backface-visibility: hidden;
    transition: all .2s;
  }
  &__text {
    transform: skewX(12deg);
    @include respond(phone) {
      transform: skewX(0);
    }
  }
  &__caption {
    position: absolute;
    top:50%;
    left:50%;
    transform: translate(-50%,20%);
    opacity: 0;
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    transition: all .2s;
    //animation-hack
    backface-visibility: hidden;
  }
  &:hover &__caption {
    opacity:1;
    transform: translate(-50%,-50%);
  }
  &:hover &__img {
    transform: translateX(-4rem) scale(1);
    //Just like image filters in css.
    filter: blur(3px) brightness(80%);
  }

}
